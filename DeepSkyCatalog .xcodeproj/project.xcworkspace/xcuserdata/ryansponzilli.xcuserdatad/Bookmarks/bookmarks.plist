<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>33</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>32</string>
					<key>Timestamp</key>
					<string>759007533.518115</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Shared/Logic/DailyReport.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            // Remove all targets with a meridian score less than 50%
</string>
				<key>leading</key>
				<string>            }
            
</string>
				<key>trailing</key>
				<string>            // ** Need to account for edge cases where meridian score doesn't effect visibility at extreme declinations
            targets = targets.filteredBySeasonScore(min: 0.5, location: location, date: date, sunData: sunData)
            
</string>
			</dict>
			<key>title</key>
			<string>Need to account for edge cases where meridian score doesn't effect visibility at extreme declinations</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>30</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>29</string>
					<key>Timestamp</key>
					<string>725431517.360909</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DeepSkyCatalogiOS/Views/DataLoadingViews.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                store.sunData = Sun.sol.getNextInterval(location: store.location, date: store.date)
</string>
				<key>leading</key>
				<string>            // Calculate sunData on a background thread
            .task {
</string>
				<key>trailing</key>
				<string>                // If its in the morning hours of the next day, still show the info for the previous day (current night)
                if Sun.sol.getAltitude(location: store.location, time: .now) &lt; -18 &amp;&amp; .now &gt; store.sunData.solarMidnight {
                    store.date = store.date.yesterday()
</string>
			</dict>
			<key>title</key>
			<string>Test this</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>44</string>
					<key>EndingLineNumber</key>
					<string>168</string>
					<key>StartingColumnNumber</key>
					<string>37</string>
					<key>StartingLineNumber</key>
					<string>168</string>
					<key>Timestamp</key>
					<string>726628064.080225</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DeepSkyCatalogMac/Views/DailyReportView/Mac_ViewingIntervalModal.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>morning</string>
				<key>leading</key>
				<string>            if let date = Binding($date) {
                Button("Tonight") {
                    // If its in the </string>
				<key>trailing</key>
				<string> hours of the next day, still show the info for the previous day (current night)
//                    if Sun.sol.getAltitude(location: store.location, time: .now) &lt; -18 &amp;&amp; .now &gt; store.sunData.solarMidnight {
//                        store.date = .now.startOfLocalDay(timezone: store.location.timezone).yesterday()
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>149</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>148</string>
					<key>Timestamp</key>
					<string>759085252.15634</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DeepSkyCatalogiOS/Views/DailyReportView/ViewingIntervalModal.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                    // If its in the morning hours of the next day, still show the info for the previous day (current night)
</string>
				<key>leading</key>
				<string>            if let date = Binding($date) {
                Button("Tonight") {
</string>
				<key>trailing</key>
				<string>//                    if Sun.sol.getAltitude(location: store.location, time: .now) &lt; -18 &amp;&amp; .now &gt; store.sunData.solarMidnight {
//                        store.date = .now.startOfLocalDay(timezone: store.location.timezone).yesterday()
//                    } else {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>136</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>135</string>
					<key>Timestamp</key>
					<string>776657546.864984</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DeepSkyCatalogMac/Views/DailyReportView/Mac_DailyReportView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>//        .navigationTitle("Daily Report | " + (store.viewingInterval == store.sunData.ATInterval ? "Night of \(DateFormatter.longDateOnly(timezone: store.location.timezone).string(from: store.date)) | \(store.location.name)" : "\(store.viewingInterval.start.formatted(date: .abbreviated, time: .shortened)) to \(store.viewingInterval.end.formatted(date: .omitted, time: .shortened)) at \(store.location.name)") + " | â˜¾ \(Moon.getMoonIllumination(date: store.date).percent(sigFigs: 2)) illuminated")
</string>
				<key>leading</key>
				<string>            }
        }
</string>
				<key>trailing</key>
				<string>    }
}
</string>
			</dict>
			<key>title</key>
			<string>causing error</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>22</string>
					<key>EndingLineNumber</key>
					<string>61</string>
					<key>StartingColumnNumber</key>
					<string>2</string>
					<key>StartingLineNumber</key>
					<string>61</string>
					<key>Timestamp</key>
					<string>742430798.567445</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DeepSkyCatalogMac/Views/TargetCurator/TargetEditor/TargetEditor.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                    </string>
				<key>leading</key>
				<string>                    ConstellationField(constellation: $constellation)
                    DescriptionField(description: $description, wikipediaURL: $wikipediaURL)
//</string>
				<key>trailing</key>
				<string>ImageField(image: $image, target: target)
                    SizeField(arcLength: $arcLength, arcWidth: $arcWidth)
                    MagnitudeField(magnitude: $apparentMag)
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>108</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>107</string>
					<key>Timestamp</key>
					<string>757634793.099058</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Shared/Logic/DeepSkyTarget/DeepSkyTarget.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    var designationDescription: String {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        var string = "\(defaultName) is designated as "
        if designation.count == 1 {
            string.append("\(designation[0].longDescription).")
</string>
			</dict>
			<key>title</key>
			<string>Not used</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>83</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>82</string>
					<key>Timestamp</key>
					<string>759007533.518104</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Shared/Logic/DailyReport.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            // if the list can be filtered down, this avoids needlessly sorting a few lines down at the time hog
</string>
				<key>leading</key>
				<string>            
            // Time Save Optimization
</string>
				<key>trailing</key>
				<string>            let smallTargetsArray = targets.filteredByVisibility(min: 0.95, location: location, viewingInterval: viewingInterval, limitingAlt: targetSettings.limitingAltitude)
            if smallTargetsArray.count &gt;= 10 {
                targets = smallTargetsArray
</string>
			</dict>
			<key>title</key>
			<string>something is fishy here</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>56</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>55</string>
					<key>Timestamp</key>
					<string>774400451.947553</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Shared/Logic/DailyReport.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                    targets = targets.filteredByType(TargetType.broadband)
</string>
				<key>leading</key>
				<string>                    }
                    targets.append(contentsOf: narrowband)
</string>
				<key>trailing</key>
				<string>                }
                
                // else (new moon) --&gt; do not filter anything, all is fine
</string>
			</dict>
			<key>title</key>
			<string>this is not correct; fix ASAP</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
